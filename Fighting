package com.bayviewglen.zork;

import java.util.Scanner;

public class Fighting {
	// no weapon = 15 damage, weapon = 50 damage
	// below you find the ints and strings of the damages, health and enemies 
	private String vampireDialogue = "Hsssss, you see a black figure jump out and scratch at you, it lands on the ground and shows it's fangs";
	private int enemyHealth;// enemy health
	private int vampireHealth = 70; // current vampire health
	private int guardHealth = 100; // the guards health
	private int yourHealth = 100; // players health
	private int damage; // current damage
	private int enemyDamage; // eney damage
	private int vampireDamage = 30; // vampireDamage
	private int guardDamage = 15; // guard damage
	private int numHealthPotions = 3; // amount of health potions
	private int healthPotionHealAmount = 20; // amount of health that heals
	Scanner in = new Scanner (System.in);
	
// different amount of damage that can be caused depending on the item used
	public Fighting(boolean w, boolean f, String guard, boolean isAttacked) {
		
		if (w) {
			damage = 50; // sword attack
		} else {
			damage = 15; // bare fists
		}
		if(guard.equalsIgnoreCase("vampire")) { // if current guard enemy is vampire, then it will turn to that enemy's health and damage
			System.out.println(vampireDialogue);
			enemyHealth = vampireHealth;
			enemyDamage = vampireDamage;
		}
		else {
			enemyHealth = guardHealth;
			enemyDamage = guardDamage;
		}
		
		guardAttacked(guard, isAttacked);
	}

	public void guardAttacked(String Guard, boolean initialAttack) {

		
		// guard attacks you
		if (initialAttack) { // if the intital attack ( means that the code will trigger a fight, then 
			System.out.println(Guard + " attacks you for " + enemyDamage + " damage ");
			yourHealth -= enemyDamage; // whatever the current enemy damage is, it gets subtracted from your total health
			System.out.println("Your current health is " + yourHealth + "."); // the amount of damage that the guard does is subtracted from your total amount of health
		}
		
		boolean runAway = false; 
		while (!runAway && guardHealth > 0 && yourHealth > 0  && enemyHealth > 0) { // while runaway is not happening, the player and enemy are still alive
			System.out.println(
					"\nResponse A) Attack\nResponse B) Block\nResponse C) Drink Health Potion\nResponse D) Run Away"); // options to fight 

			String r = in.nextLine();

			if (r.equals("A")) { 
				enemyHealth -= damage;// if you choose A to attack, that subtracts the amount of damage your current item does from the total health of the guard
				System.out.println(
						"You dealt " + damage + " damage" + "," + 
						" \nThe enemy's health is now " + enemyHealth + ".");
					
				System.out.println(" The enemy  attacks you for " + enemyDamage + " damage");
				yourHealth -= enemyDamage; // if you attack a enemy, they will attack you back, 
				System.out.println("Your current health is " + yourHealth + ".");

			} else if (r.equals("B")) {
				yourHealth += 5;
				System.out.println("You blocked his attack"); // nothing happens if you block his attack except health goes up by 5
				System.out.println("Youre current health is " + yourHealth + ".");
				// nothing happens
			} else if (r.equals("D")) {
				double run = Math.random();
				if (run < 0.51) { // 50 50 chance of running away to the next room and 50 50 that the enemy will attack you
					runAway = true;
				}
			} else if (r.equals("C")) { 
				if (numHealthPotions > 0) { // player starts off with 3 health potions and gets more in the game 
					yourHealth += healthPotionHealAmount;
					System.out.println("\n\tYou drink a health potion, healing yourself for " + healthPotionHealAmount + "."
							+ "\n\t> You now have " + yourHealth + " health left." + "\n\t> You have " 
							+ numHealthPotions + " health potions left.\n");
	
					numHealthPotions--;
				} else {
					System.out.println("\t> You have no health potions left");
				}

			} else {
				System.out.println(
						"\nResponse A) Attack\nResponse B) Block\nResponse C)Drink Health Potion\nResponse D) Run Away");

				if (!runAway && enemyHealth > 0 && yourHealth > 0) {
					double run = Math.random();
					if (run < 0.51) {
						System.out.println("They step right infront of you and attacks you and" // attacks you 
								+ (Guard + " attacks you for " + enemyDamage + " damage ")
								+ "\nYour current health is " + yourHealth + "." +
						"\nResponse A) Attack\nResponse B) Block\nResponse C)Drink Health Potion\nResponse D) Run Away");
					} else {
						System.out.println(Guard + " attacks you but misses" // attacks you but misses, 50/50 chance of getting hit or not
								+ "\nResponse A) Attack\nResponse B) Block\nResponse C)Drink Health Potion\nResponse D) Run Away");
					}
				}
			}
			
			if (playerDead())
				System.exit(0);
				// then the game exits 
		}
	}



	public boolean playerDead() {
		if (yourHealth <= 0) {
			System.out.println("You have died, would you like to play again? (Y/N");
			String response = in.nextLine();
						
			if (response.equalsIgnoreCase("Y")) {
				System.out.println("Alright! Here we go.");
				Game g = new Game();
				g.play();
			} else if (response.equalsIgnoreCase("N")) {
				System.exit(0);
			}
			return false;
		}
		return false;
	}
}
