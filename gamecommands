private void printWelcome() {
		System.out.println();
		System.out.println("Welcome to Zork!");
		System.out.println("Zork is a new, adventure game.");
		System.out.println("Type 'help' if you need help.");
		System.out.println();
		System.out.println(currentRoom.longDescription());
	}

	/**
	 * Given a command, process (that is: execute) the command. If this command ends
	 * the game, true is returned, otherwise false is returned.
	 */
	private boolean processCommand(Command command) {
		if (command.isUnknown()) {
			System.out.println("I don't know what you mean...");
			return false;
		}
		String commandWord = command.getCommandWord();
		if (commandWord.equals("help"))
			printHelp();
		else if (commandWord.equals("drop")) {
			if (command.hasSecondWord())
				drop(command.getSecondWord());
			else
				System.out.println("drop what?");

		} else if (commandWord.equals("Enter")) {
			if (command.hasSecondWord())
				enter(command.getSecondWord());

		} else if (commandWord.equals("Exit")) {
			if (command.hasSecondWord())
				exit(command.getSecondWord());

		} else if (commandWord.equals("Look")) {
			if (command.hasSecondWord())
				look(command.getSecondWord());
			else
				System.out.println("Look where?");

		} else if (commandWord.equals("climb")) {
			if (command.hasSecondWord())
				climb(command.getSecondWord());
			else
				System.out.println("climb what?");

		} else if (commandWord.equals("Jump")) {
			if (command.hasSecondWord())
				System.out.println("Wheeeeeeeeee");

		} else if (commandWord.equals("open")) {
			if (command.hasSecondWord())
				open(command.getSecondWord());
			else
				System.out.println("Open what?");

		} else if (commandWord.equals("swim")) {
			if (command.hasSecondWord())
				swim(command.getSecondWord());
			else
				System.out.println("where?");

		} else if (commandWord.equals("carry")) {
			if (command.hasSecondWord())
				System.out.println("carried");

		} else if (commandWord.equals("take")) {
			if (command.hasSecondWord())
				take(command.getSecondWord());
			else
				System.out.println("taken");

		} else if (commandWord.equals("throw")) {
			if (command.hasSecondWord())
				read(command.getSecondWord());
			else
				System.out.println("throw what?");

		} else if (commandWord.equals("give")) {
			if (command.hasSecondWord())
				read(command.getSecondWord());
			else
				System.out.println("give what?");

		} else if (commandWord.equals("read")) {
			if (command.hasSecondWord())
				read(command.getSecondWord());
			else
				System.out.println("read what?");

		} else if (commandWord.equals("attack")) {
			if (command.hasSecondWord())
				attack(command.getSecondWord());
			else
				System.out.println("what do you want to attack with?");

		} else if (commandWord.equals("walk")) {
			if (command.hasSecondWord())
				walk(command.getSecondWord());
			else
				System.out.println("where do you want to walk?");

		} else if (commandWord.equals("run")) {
			if (command.hasSecondWord())
				run(command.getSecondWord());
			else
				System.out.println("Where do you want to run?");

		} else if (commandWord.equals("scream")) {
			if (command.hasSecondWord())
				System.out.println("AAAAAAAAAAAAAAAAAAAAHHHHHHHHHHHHHHHHHHHH");
		}
		else if (commandWord.equals("go")) {
			go(command.getSecondWord());
			goRoom(command);

		} else if (commandWord.equals("quit")) {
			if (command.hasSecondWord())
				System.out.println("Are you sure?");
			else
				return true; // signal that we want to quit
		} else if (commandWord.equals("eat")) {
			eat(command.getSecondWord());
		} else {
			System.out.println("eat what?");
		}
		return false;

	}

	private void go(String secondWord) {
		// TODO Auto-generated method stub
		
	}

	private void take(String secondWord) {
		if (secondWord.equals("sword")) {
			if (currentRoom.getRoomInventory().hasItem(secondWord)) {
				System.out.println("You have now taken" + secondWord);
				playerInventory.addToInventory(new Item(secondWord, 30));
				currentRoom.getRoomInventory().removeFromInventory(secondWord);
			}
		} else if (secondWord.equals("torch")) {
			if (currentRoom.getRoomInventory().hasItem(secondWord)) {
				System.out.println("You have now taken" + secondWord);
				playerInventory.addToInventory(new Item(secondWord, 15));
				currentRoom.getRoomInventory().removeFromInventory(secondWord);
			}
		} else
			System.out.println("You can't take " + secondWord);

	}

	private void exit(String secondWord) {
		// TODO Auto-generated method stub

	}

	private void enter(String secondWord) {
		if(currentRoom.getRoomName().equals("Living Room")) {
			if (secondWord.equals("tree")) {
				System.out.println("You climb the Christmas Tree");
						System.out.println ("There is  " + secondWord);
					// if it can't be opened
						System.out.println(secondWord + " cant be entered");
				// if item does not exist
				System.out.println("You dont have a " + secondWord);
		
	}

	private void eat(String secondWord) {
		// TODO Auto-generated method stub

	}

	private void run(String secondWord) {
		// TODO Auto-generated method stub

	}

	private void walk(String secondWord) {
		// TODO Auto-generated method stub

	}

	private void attack(String secondWord) {
		// TODO Auto-generated method stub

	}

	private void open(String secondWord) {
		// if item exists
		// if item can be opened
		System.out.println("There is a ____ inside the " + secondWord);
		// if it cant be opened
		System.out.println(secondWord + " cant be opened");
		// if item does not exist
		System.out.println("You dont have a " + secondWord);

	}

	private void climb(String secondWord) {
		if (currentRoom.getRoomName().equals("Living Room")) {
			if (secondWord.equals("tree")) {
				System.out.println("You climb the Christmas Tree");
			}

			else {
				System.out.println("you cannot climb this object");
			}

		}

	}

	private void look(String secondWord) {
		// TODO Auto-generated method stub

	}

	private void drop(String secondWord) {
		if (playerInventory.hasItem(secondWord)) {
			currentRoom.getRoomInventory().addToInventory(new Item(secondWord, 5));
			System.out.println("You have now dropped" + secondWord);
			playerInventory.removeFromInventory(secondWord);
			System.out.println("You dropped the" + secondWord);
		} else
			System.out.println("You dont have a " + secondWord);

	}

	private void read(String secondWord) {

		System.out.println("You read the" + secondWord);

	}

	// implementations of user commands:
	/**
	 * Print out some help information. Here we print some stupid, cryptic message
	 * and a list of the command words.
	 */
	private void printHelp() {
		System.out.println("You are lost. You wander");
		System.out.println("around at a house.");
		System.out.println();
		System.out.println("Your command words are:");
		parser.showCommands();
	}

	/**
	 * Try to go to one direction. If there is an exit, enter the new room,
	 * otherwise print an error message.
	 */
	private void goRoom(Command command) {
		if (!command.hasSecondWord()) {
			// if there is no second word, we don't know where to go...
			System.out.println("Go where?");
			return;
		}
		String direction = command.getSecondWord();
		// Try to leave current room.
		Room nextRoom = currentRoom.nextRoom(direction);
		if (nextRoom == null)
			System.out.println("There is no door!");
		else {
			currentRoom = nextRoom;
			System.out.println(currentRoom.longDescription());
		}
	}
